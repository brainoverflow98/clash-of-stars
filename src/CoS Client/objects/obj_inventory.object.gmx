<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_inventory</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>str = "";
created = false;
instance_create(x+648,y+55,obj_exitinv)
instance_create(x+672,y+55,obj_saveinv)
instance_create(x+575,y+180,obj_config1)
instance_create(x+625,y+180,obj_config2)
shipID=0;
config = 1;
base_HP=0;
base_sped=0;
laser_slot=0;
generator_slot=0;
drone_number=0;


config1_maxHP = 0;
config1_maxshield = 0;
config1_DMG = 0;
config1_sped = 0;
config2_maxHP = 0;
config2_maxshield = 0;
config2_DMG = 0;
config2_sped = 0;


config1_ship_LF4_HP = 0;
config1_ship_LF4_MD = 0;
config1_ship_LF4_PD = 0;
config1_ship_BO2 = 0;
config1_ship_G3N = 0;
config1_drone_LF4_HP = 0;
config1_drone_LF4_MD = 0;
config1_drone_LF4_PD = 0;
config1_drone_BO2 = 0;
config1_drone_havoc = 0;
config1_drone_hercules = 0;
config2_ship_LF4_HP = 0;
config2_ship_LF4_MD = 0;
config2_ship_LF4_PD = 0;
config2_ship_BO2 = 0;
config2_ship_G3N = 0;
config2_drone_LF4_HP = 0;
config2_drone_LF4_MD = 0;
config2_drone_LF4_PD = 0;
config2_drone_BO2 = 0;
config2_drone_havoc = 0;
config2_drone_hercules = 0;
DMG_bonus = 0;
SH_bonus = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_itemslot)
{
    instance_destroy()
}
with(obj_LF4_PD)
{
    instance_destroy()
}
with(obj_LF4_HP)
{
    instance_destroy()
}
with(obj_LF4_MD)
{
    instance_destroy()
}
with(obj_BO2)
{
    instance_destroy()
}
with(obj_G3N)
{
    instance_destroy()
}
with(obj_havoc)
{
    instance_destroy()
}
with(obj_hercules)
{
    instance_destroy()
}
with(obj_config1)
{
    instance_destroy()
} 
with(obj_config2)
{
    instance_destroy()
} 
with(obj_saveinv)
{
    instance_destroy()
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(config == 1 and  created == false)
{
    
    xx = x+130
    yy = y+145
    for (i=0;i&lt;laser_slot;i++)//create ship laser slots
    {
        ship_laser[i] = instance_create(xx,yy,obj_itemslot)
        ship_laser[i].item = 0
        xx += 35
        if i == 9
        {
            yy += 35
            xx = x+130
        }     
    }    
    for (i=0;i&lt;config1_ship_LF4_HP;i++)//create LF4_HP lasers
    {
        for (n=0;n&lt;laser_slot;n++)
        {
            if ship_laser[n].item = 0
            {
                ship_laser[n].item = 1//1 for LF4_HP
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config1_ship_LF4_MD;i++)//create LF4_MD lasers
    {
        for (n=0;n&lt;laser_slot;n++)
        {
            if ship_laser[n].item = 0
            {
                ship_laser[n].item = 2//2 for LF4_MD
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config1_ship_LF4_PD;i++)//create LF4_PD lasers
    {
        for (n=0;n&lt;laser_slot;n++)
        {
            if ship_laser[n].item = 0
            {
                ship_laser[n].item = 3//3 for LF4_PD
                break;    
            } 
        }                
    }
    xx = x+130
    yy = y+250
    for (i=0;i&lt;generator_slot;i++)//create ship generator slots
    {
        ship_generator[i] = instance_create(xx,yy,obj_itemslot)
        ship_generator[i].item = 0
        xx += 35
        if i == 9
        {
            yy += 35
            xx = x+130
        }     
    }
    for (i=0;i&lt;config1_ship_BO2;i++)//create BO2 shield
    {
        for (n=0;n&lt;generator_slot;n++)
        {
            if ship_generator[n].item = 0
            {
                ship_generator[n].item = 4//4 for BO2
                break;    
            } 
        }                
    }    
    for (i=0;i&lt;config1_ship_G3N;i++)//create G3N shield
    {
        for (n=0;n&lt;generator_slot;n++)
        {
            if ship_generator[n].item = 0
            {
                ship_generator[n].item = 5//5 for G3N
                break;    
            } 
        }                
    }
    xx = x+130
    yy = y+392
    for (i=0;i&lt;drone_number*2;i++)//create drone slots
    {
        drone_slot[i] = instance_create(xx,yy,obj_itemslot)
        drone_slot[i].item = 0
        drone_slot[i].drone = 1
        xx += 35
        if i == 9
        {
            yy += 35
            xx = x+130
        }     
    }
    for (i=0;i&lt;config1_drone_LF4_HP;i++)//create LF4_HP lasers for drones
    {
        for (n=0;n&lt;drone_number*2;n++)
        {
            if drone_slot[n].item = 0
            {
                drone_slot[n].item = 1//1 for LF4_HP
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config1_drone_LF4_MD;i++)//create LF4_MD lasers for drones
    {
        for (n=0;n&lt;drone_number*2;n++)
        {
            if drone_slot[n].item = 0
            {
                drone_slot[n].item = 2//2 for LF4_MD
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config1_drone_LF4_PD;i++)//create LF4_PD lasers for drones
    {
        for (n=0;n&lt;drone_number*2;n++)
        {
            if drone_slot[n].item = 0
            {
                drone_slot[n].item = 3//3 for LF4_PD
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config1_drone_BO2;i++)//create BO2 shields for drones
    {
        for (n=0;n&lt;drone_number*2;n++)
        {
            if drone_slot[n].item = 0
            {
                drone_slot[n].item = 4//4 for BO2
                break;    
            } 
        }                
    }    
    xx = x+130
    yy = y+500
    for (i=0;i&lt;drone_number;i++)//create drone design slots
    {
        drone_design[i] = instance_create(xx,yy,obj_itemslot)
        drone_design[i].item = 0
        xx += 35
        if i == 9
        {
            yy += 35
            xx = x+130
        }     
    }
    for (i=0;i&lt;config1_drone_havoc;i++)//create havoc for drones
    {
        for (n=0;n&lt;drone_number;n++)
        {
            if drone_design[n].item = 0
            {
                drone_design[n].item = 6//6 for havoc
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config1_drone_hercules;i++)//create hercules for drones
    {
        for (n=0;n&lt;drone_number;n++)
        {
            if drone_design[n].item = 0
            {
                drone_design[n].item = 7//7 for hercules
                break;    
            } 
        }                
    }
    xx = x+295
    yy = y+640   
    instance_create(xx,yy,obj_LF4_HP)
    xx += 36
    instance_create(xx,yy,obj_LF4_MD)
    xx += 36
    instance_create(xx,yy,obj_LF4_PD)
    xx += 36
    instance_create(xx,yy,obj_BO2)
    xx += 36    
    instance_create(xx,yy,obj_G3N)
    xx += 36
    instance_create(xx,yy,obj_havoc)
    xx += 36
    instance_create(xx,yy,obj_hercules)
    
         
    created = true
}
if(config == 2 and  created == false)
{
    xx = x+130
    yy = y+145
    for (i=0;i&lt;laser_slot;i++)//create ship laser slots
    {
        ship_laser[i] = instance_create(xx,yy,obj_itemslot)
        ship_laser[i].item = 0
        xx += 35
        if i == 9
        {
            yy += 35
            xx = x+130
        }     
    }    
    for (i=0;i&lt;config2_ship_LF4_HP;i++)//create LF4_HP lasers
    {
        for (n=0;n&lt;laser_slot;n++)
        {
            if ship_laser[n].item = 0
            {
                ship_laser[n].item = 1//1 for LF4_HP
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config2_ship_LF4_MD;i++)//create LF4_MD lasers
    {
        for (n=0;n&lt;laser_slot;n++)
        {
            if ship_laser[n].item = 0
            {
                ship_laser[n].item = 2//2 for LF4_MD
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config2_ship_LF4_PD;i++)//create LF4_PD lasers
    {
        for (n=0;n&lt;laser_slot;n++)
        {
            if ship_laser[n].item = 0
            {
                ship_laser[n].item = 3//3 for LF4_PD
                break;    
            } 
        }                
    }
    xx = x+130
    yy = y+250
    for (i=0;i&lt;generator_slot;i++)//create ship generator slots
    {
        ship_generator[i] = instance_create(xx,yy,obj_itemslot)
        ship_generator[i].item = 0
        xx += 35
        if i == 9
        {
            yy += 35
            xx = x+130
        }     
    }
    for (i=0;i&lt;config2_ship_BO2;i++)//create BO2 shield
    {
        for (n=0;n&lt;generator_slot;n++)
        {
            if ship_generator[n].item = 0
            {
                ship_generator[n].item = 4//4 for BO2
                break;    
            } 
        }                
    }    
    for (i=0;i&lt;config2_ship_G3N;i++)//create G3N shield
    {
        for (n=0;n&lt;generator_slot;n++)
        {
            if ship_generator[n].item = 0
            {
                ship_generator[n].item = 5//5 for G3N
                break;    
            } 
        }                
    }
    xx = x+130
    yy = y+392
    for (i=0;i&lt;drone_number*2;i++)//create drone slots
    {
        drone_slot[i] = instance_create(xx,yy,obj_itemslot)
        drone_slot[i].item = 0
        drone_slot[i].drone = 1
        xx += 35
        if i == 9
        {
            yy += 35
            xx = x+130
        }     
    }
    for (i=0;i&lt;config2_drone_LF4_HP;i++)//create LF4_HP lasers for drones
    {
        for (n=0;n&lt;drone_number*2;n++)
        {
            if drone_slot[n].item = 0
            {
                drone_slot[n].item = 1//1 for LF4_HP
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config2_drone_LF4_MD;i++)//create LF4_MD lasers for drones
    {
        for (n=0;n&lt;drone_number*2;n++)
        {
            if drone_slot[n].item = 0
            {
                drone_slot[n].item = 2//2 for LF4_MD
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config2_drone_LF4_PD;i++)//create LF4_PD lasers for drones
    {
        for (n=0;n&lt;drone_number*2;n++)
        {
            if drone_slot[n].item = 0
            {
                drone_slot[n].item = 3//3 for LF4_PD
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config2_drone_BO2;i++)//create BO2 shields for drones
    {
        for (n=0;n&lt;drone_number*2;n++)
        {
            if drone_slot[n].item = 0
            {
                drone_slot[n].item = 4//4 for BO2
                break;    
            } 
        }                
    }    
    xx = x+130
    yy = y+500
    for (i=0;i&lt;drone_number;i++)//create drone design slots
    {
        drone_design[i] = instance_create(xx,yy,obj_itemslot)
        drone_design[i].item = 0
        xx += 35
        if i == 9
        {
            yy += 35
            xx = x+130
        }     
    }
    for (i=0;i&lt;config2_drone_havoc;i++)//create havoc for drones
    {
        for (n=0;n&lt;drone_number;n++)
        {
            if drone_design[n].item = 0
            {
                drone_design[n].item = 6//6 for havoc
                break;    
            } 
        }                
    }
    for (i=0;i&lt;config2_drone_hercules;i++)//create hercules for drones
    {
        for (n=0;n&lt;drone_number;n++)
        {
            if drone_design[n].item = 0
            {
                drone_design[n].item = 7//7 for hercules
                break;    
            } 
        }                
    }
    xx = x+295
    yy = y+640  
    instance_create(xx,yy,obj_LF4_HP)
    xx += 36
    instance_create(xx,yy,obj_LF4_MD)
    xx += 36
    instance_create(xx,yy,obj_LF4_PD)
    xx += 36
    instance_create(xx,yy,obj_BO2)
    xx += 36    
    instance_create(xx,yy,obj_G3N)
    xx += 36
    instance_create(xx,yy,obj_havoc)
    xx += 36
    instance_create(xx,yy,obj_hercules)
    
         
    created = true;
}

//configration update and update used equipments

    config1_maxHP = base_HP*((config1_drone_hercules*2+100)/100)*((config1_drone_havoc*1.5+100)/100)*(((config1_ship_LF4_HP+config1_drone_LF4_HP)*0.5+100)/100);
    config1_maxshield = ((config1_ship_BO2*33000)+(config1_drone_BO2*46000))*((config1_drone_hercules*1.5+100)/100)*(((config1_ship_LF4_PD+config1_drone_LF4_PD)*1+100)/100)*((SH_bonus+100)/100);   
    config1_DMG = ((config1_ship_LF4_HP*410)+(config1_ship_LF4_MD*435)+(config1_ship_LF4_PD*385)+(config1_drone_LF4_HP*475)+(config1_drone_LF4_MD*500)+(config1_drone_LF4_PD*450))*((config1_drone_havoc*2+100)/100)*((DMG_bonus+100)/100);
    config1_sped = base_sped+config1_ship_G3N*12;   
    
    config2_maxHP = base_HP*((config2_drone_hercules*2+100)/100)*((config2_drone_havoc*1.5+100)/100)*(((config2_ship_LF4_HP+config2_drone_LF4_HP)*0.5+100)/100);
    config2_maxshield = ((config2_ship_BO2*33000)+(config2_drone_BO2*46000))*((config2_drone_hercules*1.5+100)/100)*(((config2_ship_LF4_PD+config2_drone_LF4_PD)*1+100)/100)*((SH_bonus+100)/100); 
    config2_DMG = ((config2_ship_LF4_HP*410)+(config2_ship_LF4_MD*435)+(config2_ship_LF4_PD*385)+(config2_drone_LF4_HP*475)+(config2_drone_LF4_MD*500)+(config2_drone_LF4_PD*450))*((config2_drone_havoc*2+100)/100)*((DMG_bonus+100)/100);
    config2_sped = base_sped+config2_ship_G3N*12;
      

//configration update
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_set_color(c_white)
draw_set_font(fnt_1)
draw_set_valign(fa_center)
draw_set_halign(fa_left)
if(config == 1)
{
    draw_text(x+598,y+247,string(config1_maxHP))
    draw_text(x+626,y+267,string(config1_maxshield))
    draw_text(x+634,y+286,string(config1_DMG))
    draw_text(x+618,y+307,string(config1_sped))      
}
else
{
    draw_text(x+598,y+247,string(config2_maxHP))
    draw_text(x+626,y+267,string(config2_maxshield))
    draw_text(x+634,y+286,string(config2_DMG))
    draw_text(x+618,y+307,string(config2_sped))
}
draw_set_halign(fa_center) 
draw_text(x+135,y+645,str)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
