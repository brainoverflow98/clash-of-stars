<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_UI_box</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>on=0;
key="";
item=0;
group=0;
selected=0;
xx=0;
yy=0;
timer=-1;
time=-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.edit=true and on=2)
{
    x=mouse_x;
    y=mouse_y;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if position_meeting(mouse_x,mouse_y,self)
{
    if(on!=2)
    on=1;
    obj_player.can_move=false;
}
else
{
    if(on==1)
    {
        obj_player.can_move=true;
        on=0;   
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.edit==false)
{
    if keyboard_check_pressed(key)
    {
        //if(timer==time)
        {
            switch(item)
            {
                case 0:
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,11);//START ATTACK
                        buffer_write(global.buffer,buffer_u8,4);
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }
                break;                 
                case 1:
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,11);//START ATTACK
                        buffer_write(global.buffer,buffer_u8,6);
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }
                break;               
                case 2:
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,11);//START ATTACK
                        buffer_write(global.buffer,buffer_u8,2);
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }
                break;
                case 3:                    
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,14);//emp   
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))       
                break;
                case 4://ISH                  
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,18);  
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))       
                break;
                case 5://CLOACK CPU                  
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,27);  
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))       
                break;
                case 6://war rep bot                   
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,17);                   
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))                    
                break;
                case 7://ice rocket
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,15);                       
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }
                break;
                case 8://SMB                   
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,19);                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))                    
                break;
                case 9://shield backup                    
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,16)                       
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))                    
                break;
                case 13:
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,13);//ROCKET LAUNCHER ATTACK    
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }        
                break;
                case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:
                        if(obj_player.drone_formation!=item-13)
                        {
                            buffer_seek(global.buffer,buffer_seek_start,0);
                            buffer_write(global.buffer,buffer_u8,26);//DRONE FORMATION
                            buffer_write(global.buffer,buffer_u8,item-13);    
                            network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                        }
                break;
                case 22://LIGHTNING SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,29)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 23://SOLACE SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,30)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 24://SENTINEL SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,31)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 25://SPECTRUM SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,32)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 26://DIMINISHER SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,33)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 27://VENOM SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,34)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
            }
        }    
        on=2
        if(group!=0)
        {
            selected=1;
            with(obj_UIbox)
            {
                if(self.group==other.group and self.item!=other.item)
                {
                    selected=0;
                }
            }
        }
    }
    if keyboard_check_released(key)
    {
        on=0
    }    
}
if(timer!=time)
time+=1;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.edit=true and on=2)
{
    if(!position_meeting(x,y,obj_UIbox) or instance_position(x,y,obj_UIbox)==id)
    {
        mx=x-prevX;
        my=y-prevY;
        dy=my%20;
        dx=mx%20;
        if(dx&lt;10)
        {dx=-dx}else{dx=20-dx}
        if(dy&lt;10)
        {dy=-dy}else{dy=20-dy}
        xx+=mx+dx;
        yy+=my+dy;
    }
    else
    {        
        x=prevX
        y=prevY
    }    
}
on=0;
obj_player.can_move=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.edit == true and !instance_exists(obj_key))
{
    change=instance_create(view_xview[0]+view_wview[0]/2,view_yview[0]+view_hview[0]/4,obj_key);
    change.UI = id;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.edit==false)
{        
        //if(timer==time)
        {
            switch(item)
            {
                case 0:
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,11);//START ATTACK
                        buffer_write(global.buffer,buffer_u8,4);
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }
                break;        
                
                case 1:
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,11);//START ATTACK
                        buffer_write(global.buffer,buffer_u8,6);
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }
                break;
                
                case 2:
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,11);//START ATTACK
                        buffer_write(global.buffer,buffer_u8,2);
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }
                break;
                case 3:                    
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,14);//emp   
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))       
                break;
                case 4://ISH                  
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,18);  
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))       
                break;
                case 5://CLOACK CPU                  
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,27);  
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))       
                break;
                case 6://war rep bot                   
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,17);                   
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))                    
                break;
                case 7://ice rocket
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,15);//START ATTACK                        
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }
                break;
                case 8://SMB                   
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,19);                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))                    
                break;
                case 9://shield backup                    
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,16);//START ATTACK                        
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))                    
                break;
                case 13:
                    if(obj_player.targetID!=0)
                    {
                        buffer_seek(global.buffer,buffer_seek_start,0);
                        buffer_write(global.buffer,buffer_u8,13);//ROCKET LAUNCHER ATTACK    
                        network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                    }        
                break;
                case 14:case 15:case 16:case 17:case 18:case 19:case 20:case 21:
                        if(obj_player.drone_formation!=item-13)
                        {
                            buffer_seek(global.buffer,buffer_seek_start,0);
                            buffer_write(global.buffer,buffer_u8,26);//ROCKET LAUNCHER ATTACK
                            buffer_write(global.buffer,buffer_u8,item-13);    
                            network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))
                        }
                break;
                case 22://LIGHTNING SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,29)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 23://LIGHTNING SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,30)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 24://SENTINEL SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,31)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 25://SENTINEL SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,32)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 26://DIMINISHER SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,33)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
                case 27://VENOM SKILL
                    buffer_seek(global.buffer,buffer_seek_start,0);
                    buffer_write(global.buffer,buffer_u8,34)                       
                    network_send_raw(global.socket,global.buffer,buffer_tell(global.buffer))  
                break;
            }
        }       
        if(group!=0)
        {
            selected=1;
            with(obj_UIbox)
            {
                if(self.group==other.group and self.item!=other.item)
                {
                    selected=0;
                }
            }
        }
} 
else
{
    prevX=x;
    prevY=y;
}       
on=2        
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !(global.edit == true and on==2)
{
    x = view_xview[0]+view_wview[0]/2-140+xx
    y = view_yview[0]+view_hview[0]-75+yy
}
if(timer==time)
{
    draw_sprite(spr_UI_box,0,x,y)
    if(item!=-1)
        draw_sprite(spr_item,item,x,y)    
}
else
{
    draw_sprite_ext(spr_UI_box,0,x,y,1,1,0,c_gray,1);
    if(item!=-1)    
        draw_sprite_ext(spr_item,item,x,y,1,1,0,c_gray,1);    
}
if(on&gt;0)
draw_sprite(spr_UI_box,1,x,y)

if(on&gt;1)
draw_sprite(spr_UI_box,1,x,y)

if(selected=1)
draw_sprite(spr_UI_box,2,x,y)

if(timer!=time)
draw_sprite_part(spr_UI_box,3,0,0,38,38-(38*time/timer),x-19,y-19)

draw_set_font(fnt_small)
draw_set_halign(fa_right)
draw_set_valign(fa_bottom)
draw_text(x+18,y+18,ASCIIToChar(key))

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
